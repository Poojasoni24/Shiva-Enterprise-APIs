// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Shiva_Enterprise_APIs.Entities.Authentication;

namespace Shiva_Enterprise_APIs.Entities;

public partial class ShivaEnterpriseContext : IdentityDbContext<ApplicationUser>
{
    public ShivaEnterpriseContext()
    {
    }

    public ShivaEnterpriseContext(DbContextOptions<ShivaEnterpriseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Branch> Branches { get; set; }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<Company> Companies { get; set; }

    public virtual DbSet<Country> Countries { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<RoleMembership> RoleMemberships { get; set; }

    public virtual DbSet<location> locations { get; set; }

    public virtual DbSet<salesmanAgent> salesmanAgents { get; set; }

    public virtual DbSet<state> states { get; set; }

    public DbSet<ApplicationUser> applicationUsers { get; set; }
    public DbSet<IdentityUserClaim<Guid>> IdentityUserClaims { get; set; }
    public DbSet<IdentityUserClaim<string>> IdentityUserClaim
    {
        get;
        set;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=LAPTOP-DRBPPARM\\MSSQLSERVER2;Initial Catalog=ShivaEnterprise;Persist Security Info=True;User ID=sa;Password=Ps@1234;Encrypt=True;TrustServerCertificate=true;");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        base.OnModelCreating(modelBuilder);
        modelBuilder.Entity<Branch>(entity =>
        {
            entity.HasKey(e => e.Branch_Id).HasName("PK__Branch__12CEB06137D1AE14");

            entity.Property(e => e.Branch_Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedDateTime).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(false);

            entity.HasOne(d => d.Company).WithMany(p => p.Branches).HasConstraintName("FK_Branch_Company");
        });

        modelBuilder.Entity<City>(entity =>
        {
            entity.HasKey(e => e.City_ID).HasName("PK__city__DE9DE0205736F02F");

            entity.Property(e => e.City_ID).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedDateAndTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.State).WithMany(p => p.Cities).HasConstraintName("FK_City_state");
        });

        modelBuilder.Entity<Company>(entity =>
        {
            entity.Property(e => e.Company_Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedDateTime).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(false);
        });

        modelBuilder.Entity<Country>(entity =>
        {
            entity.HasKey(e => e.Country_ID).HasName("PK__country__8036CB4EB0037A51");

            entity.Property(e => e.Country_ID).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedDateAndTime).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleID).HasName("PK__Role__8AFACE3A83A362B5");

            entity.Property(e => e.RoleID).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedDateAndTime).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.IsActive).HasDefaultValue(false);
        });

        modelBuilder.Entity<RoleMembership>(entity =>
        {
            entity.HasKey(e => e.RoleMenmbershiID).HasName("PK__RoleMemb__37DF7DF41C67961E");

            entity.Property(e => e.RoleMenmbershiID).HasDefaultValueSql("(newid())");

            entity.HasOne(d => d.Role).WithMany(p => p.RoleMemberships).HasConstraintName("FK_RoleMembership_Role");

            entity.HasOne(d => d.User).WithMany(p => p.RoleMemberships).HasConstraintName("FK_RoleMembership_user");
        });

        modelBuilder.Entity<location>(entity =>
        {
            entity.HasKey(e => e.Location_ID).HasName("PK__location__D2BA00C2438AF258");

            entity.Property(e => e.Location_ID).HasDefaultValueSql("(newid())");
            entity.Property(e => e.ICreatedDateAndTime).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<salesmanAgent>(entity =>
        {
            entity.HasKey(e => e.SalesmanAgentID).HasName("PK__salesman__B94AD674532DF6E8");

            entity.Property(e => e.SalesmanAgentID).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedDateAndTime).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<state>(entity =>
        {
            entity.HasKey(e => e.State_ID).HasName("PK__state__AF9338D7D97D88B7");

            entity.Property(e => e.State_ID).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedDateAndTime).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Country).WithMany(p => p.states).HasConstraintName("FK_state_Country");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}